apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "trader.fullname" . }}
  labels: {{- include "trader.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "trader.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "trader.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: trader
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - { name: MODE,     value: "{{ .Values.env.MODE }}" }
            - { name: STRATEGY, value: "{{ .Values.env.STRATEGY }}" }
            - { name: SYMBOLS,  value: "{{ .Values.env.SYMBOLS }}" }
            - { name: CASH,     value: "{{ .Values.env.CASH }}" }
          ports:
            - name: http
              containerPort: 8000
          readinessProbe:
            httpGet: { path: /metrics, port: http }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /metrics, port: http }
            initialDelaySeconds: 10
            periodSeconds: 20
YAML
