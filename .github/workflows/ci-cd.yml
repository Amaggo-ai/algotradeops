name: ci-cd

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'ap-south-1' }}
  EKS_CLUSTER: ${{ vars.EKS_CLUSTER || 'algo-devops-eks' }}
  ECR_REPO: ${{ vars.ECR_REPO }}                # e.g. algo-devops-repo
  AWS_ROLE_TO_ASSUME: ${{ vars.AWS_ROLE_TO_ASSUME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest bandit
      - name: Run tests
        run: pytest -q
      - name: SAST (Bandit)
        run: bandit -r app -q || true

  docker-publish:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
        run: |
          docker build -t "$REGISTRY/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}" .
          docker push "$REGISTRY/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}"
          echo "IMAGE_FULL=$REGISTRY/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}" >> 
$GITHUB_ENV
          echo "IMAGE_REPO=$REGISTRY/${{ env.ECR_REPO }}" >> $GITHUB_ENV

  deploy:
    needs: docker-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name "${{ env.EKS_CLUSTER }}" --region 
"${{ env.AWS_REGION }}"
      - name: Setup Helm
        uses: azure/setup-helm@v4
      - name: Helm upgrade/install
        run: |
          helm upgrade --install trader ./helm/trader \
            --set image.repository="${{ env.IMAGE_REPO }}" \
            --set image.tag="${{ env.IMAGE_TAG }}" \
            --set env.MODE="sim" \
            --set env.STRATEGY="sma_cross" \
            --set service.type="LoadBalancer"
